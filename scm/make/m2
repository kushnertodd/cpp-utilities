# This makefile was generated by the genmake.pl script.
# This is customized for the platform/compiler known as "".
#
###############################################################################
# C++ Components Series events makefile.
# Copyright (c) 1995-2013 by Recursion Software, Inc.  All rights reserved.
# Email: psupport@recursionsw.com
#

NAME = local

include ../../../config/$(NAME).cfg


###############################################################################
#
# Common macro declarations.
#

CC_ARGS = \
	-I$(TOOLKIT) \
	$(CC_INCLUDES) \
	$(CC_FLAGS) \
	$(CC_DEFINES) \
	$(CC_EH) \
	$(CC_MT)

ODIR=$(TOOLKIT)/lib
LIBNAME=$(ODIR)/libospace.a
TK_NAME=time

ifdef MAKE_SHARED
  define compile_shared
    $(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $(CC_COMPILE_SHARED_FLAG) $<$(CC_SUFFIX)
  endef
  define link_shared
    $(LINK_SHARED_COMMAND) $(LINK_SHARED_FLAG) $(OBJS) -o $(ODIR)/$(SHARED_LIB_NAME) $(SYSTEM_LIBS)
  endef
else
  define compile_shared
    @echo "Skipping compiling $@ as a shared object"
  endef
  define link_shared
    @echo "Skipping linking shared lib"
  endef
endif

ifdef MAKE_STATIC
  define compile_static
    $(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $(CC_COMPILE_STATIC_FLAG) -o $(TOOLKIT)/ospace/.static_objs/$@ $<$(CC_SUFFIX)
  endef
else
  define compile_static
    @echo "Skipping compiling $@ as a static object"
  endef
endif
 
###############################################################################
#
# Main object compile rule.
#

.SUFFIXES: .cpp .cxx .cc .C .c .o

%.o: %.cpp
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $(CC_COMPILE_STATIC_FLAG) $<$(CC_SUFFIX) $(CC_OBJECT_FLAG) $@
%.o: %.c
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $(CC_COMPILE_FLAG) $<$(CC_SUFFIX) $(CC_OBJECT_FLAG) $@

###############################################################################
#
# File list.
#

TARGETS =  \
	chngdate dlength date1 format1 stopwch1 time1 timedat1  \
	timedat2 tperiod1 tperiod2 tzone1 tzone2 tzone3  \
	wint1 test

OBJS =  \
	chngdate.o dlength.o date1.o format1.o stopwch1.o time1.o timedat1.o  \
	timedat2.o tperiod1.o tperiod2.o tzone1.o tzone2.o tzone3.o  \
	wint1.o test.o

###############################################################################
#
# Rules.
#

all:: 
	@for f in $(TARGETS) ;\
	do\
	  if [ -f $$f.cpp  ] ;\
	  then \
	    echo "==== Building $$f:" ;\
	    $(MAKE) $$f;\
	    THIS_EXIT_STATUS="$$?" ; \
	    if [ "$${THIS_EXIT_STATUS}" -ne "0" ] ; \
	    then \
		exit $$THIS_EXIT_STATUS ; \
	    fi ; \
	  fi ;\
	done

srcs::
	@echo $(TARGETS:=.cpp)

tidy::
	rm -f $(OBJS)
	@rm -f objs.tmp defs.tmp
	rm -rf core $(REPOSITORY)

clean:: tidy
	rm -f $(TARGETS)

###############################################################################
#
# Targets.
#

chngdate: chngdate.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;
	
test: test.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

date1: date1.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

dlength: dlength.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

format1: format1.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

stopwch1: stopwch1.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

time1: time1.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

timedat1: timedat1.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

timedat2: timedat2.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

tperiod1: tperiod1.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

tperiod2: tperiod2.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

tzone1: tzone1.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

tzone2: tzone2.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

tzone3: tzone3.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

wint1: wint1.o 
	$(CC_PATH)/$(CC_EXEC) $(CC_ARGS) $? -L$(ODIR) $(OS_EXAMPLE_LIBS) $(SYSTEM_LIBS) $(CC_EXECUTABLE_FLAG) $@
	@if [ ! -z "$(REPOSITORY)" ] ; \
	then \
	  rm -rf $(REPOSITORY) ;\
	fi;

#
# End of Makefile
#
###############################################################################
